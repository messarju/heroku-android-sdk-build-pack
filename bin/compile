#!/bin/sh

check_hash() { # xxsum, file, hash
	[ ! -e "$2" ] && return 9
	[ "`$1 "$2" | grep -o -E '^[[:alnum:]]+'`" = "$3" ]
}

profile_d(){
	mkdir -vp `dirname $1`
	cat << EOF > "$1"
	export PATH="\$PATH:${2}"
EOF
}

android_sdk_download() {
	local BUILD_DIR=$1
	local CACHE_DIR=$2
	local ZIP_URL=https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
	local ZIP_HASH=92ffee5a1d98d856634e8b71132e8a95d96c83a63fde1099be3d86df3106def9
	local ZIP_HASH_FUNC=sha256sum
	local ZIP_BASE_NAME=sdk-tools-linux-4333796
	local ZIP_OPT_DIR="$BUILD_DIR/android_sdk"
	local ZIP_CACHE=$CACHE_DIR/$ZIP_BASE_NAME.zip
	echo "       Installing $ZIP_URL"
	mkdir -pv "$BUILD_DIR"
	mkdir -pv "$CACHE_DIR"
	mkdir -pv "$ZIP_OPT_DIR"
	check_hash $ZIP_HASH_FUNC "$ZIP_CACHE" $ZIP_HASH
	if [ $? != 0 ]; then
		echo "       Downloading to $ZIP_CACHE"
		curl -L --silent -o "$ZIP_CACHE" "$ZIP_URL"
	fi
	if [ ! -e "$ZIP_CACHE" ] ; then
		echo "       No $ZIP_CACHE"
	elif [ ! -e "$ZIP_OPT_DIR" ] ; then
		echo "       No $ZIP_OPT_DIR"
	else
		echo "       Extracting to $ZIP_OPT_DIR"
	fi
	unzip -q -d "$ZIP_OPT_DIR" "$ZIP_CACHE"
	# mv -v "$ZIP_OPT_DIR"/*/* "$ZIP_OPT_DIR"
}

echo "-----> Install Android SDK"
BUILD_DIR=$1
CACHE_DIR=$2
# BUILD_DIR=/tmp/x/b
# CACHE_DIR=/tmp/x/c

android_sdk_download "$BUILD_DIR/.opt" "$CACHE_DIR"

PROFILE_SH=$(dirname $0)/profile.sh
PROFILE_PATH="$BUILD_DIR/.profile.d/android-sdk.sh"
mkdir -p $(dirname $PROFILE_PATH)
cp "$PROFILE_SH" "$PROFILE_PATH"
TARGET="$BUILD_DIR/.opt/android_sdk/tools/proguard/docs"
[ -d "$TARGET" ] && rm -r "$TARGET"
TARGET="$BUILD_DIR/.opt/android_sdk/tools/proguard/examples"
[ -d "$TARGET" ] && rm -r "$TARGET"
TARGET="$BUILD_DIR/.opt/android_sdk/tools/lib/monitor-x86_64"
[ -d "$TARGET" ] && rm -r "$TARGET"

# ls -lAR /tmp/x
